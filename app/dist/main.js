(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"+pfL":function(t,n){t.exports=".purple ::ng-deep .mat-progress-bar-fill::after {\n  background-color: #7c00c4; }\n\n.green ::ng-deep .mat-progress-bar-fill::after {\n  background-color: rgba(33, 224, 132, 0.5); }\n\n.dot {\n  height: 10px;\n  width: 10px;\n  background-color: #bbb;\n  border-radius: 50%;\n  display: inline-block; }\n\nspan[positive] {\n  background-color: #4bd28f; }\n\nspan[intermediary] {\n  background-color: #ffaa00; }\n\nspan[negative] {\n  background-color: #ff4d4d; }\n"},0:function(t,n,r){t.exports=r("zUnb")},1:function(t,n){},"A+cK":function(t,n){t.exports=".flex-container-col {\n  display: flex;\n  /* or inline-flex */\n  flex-direction: column; }\n\n.flex-container-row {\n  display: flex;\n  /* or inline-flex */\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center; }\n\n.item {\n  flex-grow: 1;\n  /* default 0 */ }\n"},"A/Yy":function(t,n){t.exports=""},AusG:function(t,n){t.exports='<div class="flex-container-row">\r\n  <div style="margin: 5px;">\r\n    <app-upstream-info\r\n      [name]="upstream.name"\r\n      [estimatedCapacityInTB]="upstream.estimatedCapacityInTB"\r\n      [historicalRounds]="upstream.historicalRounds"\r\n      [bestDL]="upstream.bestDL"\r\n      [currentBlock]="upstream.blockNumber"\r\n      [netDiff]="upstream.netDiff"\r\n      [roundStart]="upstream.roundStart"\r\n      [miners]="miners"\r\n      [maxScanTime]="maxScanTime">\r\n    </app-upstream-info>\r\n  </div>\r\n  <app-round-stats [totalRounds]="upstream.totalRounds"\r\n                   [roundsWithDLs]="upstream.roundsWithDLs"\r\n                   [roundsSubmitted]="upstream.roundsSubmitted"\r\n                   [roundsWon]="upstream.roundsWon"\r\n                   style="margin: 5px;">\r\n  </app-round-stats>\r\n  <app-net-diff-chart\r\n    [historicalRounds]="upstream.historicalRounds.reverse()"\r\n    style="margin: 5px;">\r\n  </app-net-diff-chart>\r\n</div>\r\n'},HalP:function(t,n){t.exports='<mat-card style="width: 320px" class="custom-card">\r\n  <mat-card-header style="margin-left: -16px">\r\n    <mat-card-title style="display: flex; justify-content: space-between;">\r\n      <span class="ellipsis">{{name}}</span>\r\n      <span style="display: flex; margin-top: 6px">\r\n        <mat-progress-bar\r\n          [ngClass]="{\'green\': scanProgress === 100, \'purple\': scanProgress !== 100}"\r\n          style="width: 120px; height: 10px; border-radius: 8px; margin-top: 3px;"\r\n          color="primary"\r\n          mode="determinate"\r\n          [value]="scanProgress">\r\n        </mat-progress-bar>\r\n        <span style="font-size: 0.7em">&nbsp;{{scanProgress}}%</span>\r\n      </span>\r\n    </mat-card-title>\r\n    <mat-card-subtitle style="color: #dcddde">\r\n      <span>Start time: {{getStartTime()}} | Elapsed: {{getElapsedSinceStart()}}</span>\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <span style="float: left;">Best deadline</span>\r\n    <span style="float: right;">{{getBestDLString()}}</span>\r\n    <div style="clear: both;"></div>\r\n    <span style="float: left;">Current block</span>\r\n    <span style="float: right;">{{currentBlock}}</span>\r\n    <div style="clear: both;"></div>\r\n    <span style="float: left;">Difficulty</span>\r\n    <span style="float: right;">{{netDiff.toFixed(0)}}</span>\r\n    <div style="clear: both;"></div>\r\n    <div>\r\n      &nbsp;\r\n    </div>\r\n    <span style="float: left;">Avg DL all time</span>\r\n    <span style="float: right;">{{getAvgDL()}}</span>\r\n    <div style="clear: both;"></div>\r\n    <span style="float: left;">Best DL all time</span>\r\n    <span style="float: right;">{{getBestDL()}}</span>\r\n    <div style="clear: both;"></div>\r\n    <span style="float: left;">Estimated Capacity</span>\r\n    <span style="float: right;">{{getEstimatedCapacity()}}</span>\r\n    <div style="clear: both;"></div>\r\n  </mat-card-content>\r\n</mat-card>\r\n'},Kgkr:function(t,n){t.exports=".flex-container-row {\n  display: flex;\n  /* or inline-flex */\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: center; }\n"},P0fl:function(t,n){t.exports=".flex-container {\n  display: flex;\n  /* or inline-flex */\n  flex-direction: column;\n  justify-content: center; }\n"},RnhZ:function(t,n,r){var e={"./af":"K/tc","./af.js":"K/tc","./ar":"jnO4","./ar-dz":"o1bE","./ar-dz.js":"o1bE","./ar-kw":"Qj4J","./ar-kw.js":"Qj4J","./ar-ly":"HP3h","./ar-ly.js":"HP3h","./ar-ma":"CoRJ","./ar-ma.js":"CoRJ","./ar-sa":"gjCT","./ar-sa.js":"gjCT","./ar-tn":"bYM6","./ar-tn.js":"bYM6","./ar.js":"jnO4","./az":"SFxW","./az.js":"SFxW","./be":"H8ED","./be.js":"H8ED","./bg":"hKrs","./bg.js":"hKrs","./bm":"p/rL","./bm.js":"p/rL","./bn":"kEOa","./bn.js":"kEOa","./bo":"0mo+","./bo.js":"0mo+","./br":"aIdf","./br.js":"aIdf","./bs":"JVSJ","./bs.js":"JVSJ","./ca":"1xZ4","./ca.js":"1xZ4","./cs":"PA2r","./cs.js":"PA2r","./cv":"A+xa","./cv.js":"A+xa","./cy":"l5ep","./cy.js":"l5ep","./da":"DxQv","./da.js":"DxQv","./de":"tGlX","./de-at":"s+uk","./de-at.js":"s+uk","./de-ch":"u3GI","./de-ch.js":"u3GI","./de.js":"tGlX","./dv":"WYrj","./dv.js":"WYrj","./el":"jUeY","./el.js":"jUeY","./en-au":"Dmvi","./en-au.js":"Dmvi","./en-ca":"OIYi","./en-ca.js":"OIYi","./en-gb":"Oaa7","./en-gb.js":"Oaa7","./en-ie":"4dOw","./en-ie.js":"4dOw","./en-il":"czMo","./en-il.js":"czMo","./en-nz":"b1Dy","./en-nz.js":"b1Dy","./eo":"Zduo","./eo.js":"Zduo","./es":"iYuL","./es-do":"CjzT","./es-do.js":"CjzT","./es-us":"Vclq","./es-us.js":"Vclq","./es.js":"iYuL","./et":"7BjC","./et.js":"7BjC","./eu":"D/JM","./eu.js":"D/JM","./fa":"jfSC","./fa.js":"jfSC","./fi":"gekB","./fi.js":"gekB","./fo":"ByF4","./fo.js":"ByF4","./fr":"nyYc","./fr-ca":"2fjn","./fr-ca.js":"2fjn","./fr-ch":"Dkky","./fr-ch.js":"Dkky","./fr.js":"nyYc","./fy":"cRix","./fy.js":"cRix","./gd":"9rRi","./gd.js":"9rRi","./gl":"iEDd","./gl.js":"iEDd","./gom-latn":"DKr+","./gom-latn.js":"DKr+","./gu":"4MV3","./gu.js":"4MV3","./he":"x6pH","./he.js":"x6pH","./hi":"3E1r","./hi.js":"3E1r","./hr":"S6ln","./hr.js":"S6ln","./hu":"WxRl","./hu.js":"WxRl","./hy-am":"1rYy","./hy-am.js":"1rYy","./id":"UDhR","./id.js":"UDhR","./is":"BVg3","./is.js":"BVg3","./it":"bpih","./it.js":"bpih","./ja":"B55N","./ja.js":"B55N","./jv":"tUCv","./jv.js":"tUCv","./ka":"IBtZ","./ka.js":"IBtZ","./kk":"bXm7","./kk.js":"bXm7","./km":"6B0Y","./km.js":"6B0Y","./kn":"PpIw","./kn.js":"PpIw","./ko":"Ivi+","./ko.js":"Ivi+","./ku":"JCF/","./ku.js":"JCF/","./ky":"lgnt","./ky.js":"lgnt","./lb":"RAwQ","./lb.js":"RAwQ","./lo":"sp3z","./lo.js":"sp3z","./lt":"JvlW","./lt.js":"JvlW","./lv":"uXwI","./lv.js":"uXwI","./me":"KTz0","./me.js":"KTz0","./mi":"aIsn","./mi.js":"aIsn","./mk":"aQkU","./mk.js":"aQkU","./ml":"AvvY","./ml.js":"AvvY","./mn":"lYtQ","./mn.js":"lYtQ","./mr":"Ob0Z","./mr.js":"Ob0Z","./ms":"6+QB","./ms-my":"ZAMP","./ms-my.js":"ZAMP","./ms.js":"6+QB","./mt":"G0Uy","./mt.js":"G0Uy","./my":"honF","./my.js":"honF","./nb":"bOMt","./nb.js":"bOMt","./ne":"OjkT","./ne.js":"OjkT","./nl":"+s0g","./nl-be":"2ykv","./nl-be.js":"2ykv","./nl.js":"+s0g","./nn":"uEye","./nn.js":"uEye","./pa-in":"8/+R","./pa-in.js":"8/+R","./pl":"jVdC","./pl.js":"jVdC","./pt":"8mBD","./pt-br":"0tRk","./pt-br.js":"0tRk","./pt.js":"8mBD","./ro":"lyxo","./ro.js":"lyxo","./ru":"lXzo","./ru.js":"lXzo","./sd":"Z4QM","./sd.js":"Z4QM","./se":"//9w","./se.js":"//9w","./si":"7aV9","./si.js":"7aV9","./sk":"e+ae","./sk.js":"e+ae","./sl":"gVVK","./sl.js":"gVVK","./sq":"yPMs","./sq.js":"yPMs","./sr":"zx6S","./sr-cyrl":"E+lV","./sr-cyrl.js":"E+lV","./sr.js":"zx6S","./ss":"Ur1D","./ss.js":"Ur1D","./sv":"X709","./sv.js":"X709","./sw":"dNwA","./sw.js":"dNwA","./ta":"PeUW","./ta.js":"PeUW","./te":"XLvN","./te.js":"XLvN","./tet":"V2x9","./tet.js":"V2x9","./tg":"Oxv6","./tg.js":"Oxv6","./th":"EOgW","./th.js":"EOgW","./tl-ph":"Dzi0","./tl-ph.js":"Dzi0","./tlh":"z3Vd","./tlh.js":"z3Vd","./tr":"DoHr","./tr.js":"DoHr","./tzl":"z1FC","./tzl.js":"z1FC","./tzm":"wQk9","./tzm-latn":"tT3J","./tzm-latn.js":"tT3J","./tzm.js":"wQk9","./ug-cn":"YRex","./ug-cn.js":"YRex","./uk":"raLr","./uk.js":"raLr","./ur":"UpQW","./ur.js":"UpQW","./uz":"Loxo","./uz-latn":"AQ68","./uz-latn.js":"AQ68","./uz.js":"Loxo","./vi":"KSF8","./vi.js":"KSF8","./x-pseudo":"/X5v","./x-pseudo.js":"/X5v","./yo":"fzPg","./yo.js":"fzPg","./zh-cn":"XDpg","./zh-cn.js":"XDpg","./zh-hk":"SatO","./zh-hk.js":"SatO","./zh-tw":"kOpN","./zh-tw.js":"kOpN"};function s(t){var n=a(t);return r(n)}function a(t){var n=e[t];if(!(n+1)){var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}return n}s.keys=function(){return Object.keys(e)},s.resolve=a,t.exports=s,s.id="RnhZ"},Uq7F:function(t,n){t.exports=".scalable {\n  width: 400px; }\n\n@media (max-width: 460px) {\n  .scalable {\n    width: 320px; } }\n"},b5tn:function(t,n){t.exports=""},c8w9:function(t,n){t.exports='<mat-card class="custom-card scalable">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      <span>Historical Difficulty</span>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <canvas #netDiffChart>{{ netDiffChart }}</canvas>\r\n  </mat-card-content>\r\n</mat-card>\r\n'},crnd:function(t,n){function r(t){return Promise.resolve().then(function(){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n})}r.keys=function(){return[]},r.resolve=r,t.exports=r,r.id="crnd"},k0Ug:function(t,n){t.exports='<mat-card style="width: 320px" class="custom-card">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      {{name}}\r\n    </mat-card-title>\r\n    <mat-card-subtitle style="color: #dcddde">\r\n      Proxy\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <span style="float: left;">Scan progress</span>\r\n    <span style="float: right;">\r\n      <span style="display: flex">\r\n        <mat-progress-bar\r\n          [ngClass]="{\'green\': scanProgress === 100, \'purple\': scanProgress !== 100}"\r\n          style="width: 120px; height: 10px; border-radius: 8px; margin-top: 3px;"\r\n          color="primary"\r\n          mode="determinate"\r\n          [value]="scanProgress">\r\n        </mat-progress-bar>\r\n      &nbsp;{{scanProgress}}%\r\n      </span>\r\n    </span>\r\n    <div style="clear: both;"></div>\r\n    <div>\r\n      &nbsp;\r\n    </div>\r\n    <div *ngFor="let miner of getMiner()">\r\n      <span style="float: left;">\r\n        <span class="dot"\r\n          [attr.positive]="getState(miner) === 2 ? true: null"\r\n          [attr.intermediary]="getState(miner) === 1 ? true: null"\r\n          [attr.negative]="getState(miner) === 0 ? true: null">\r\n        </span>\r\n        {{miner.id}}\r\n      </span>\r\n      <span style="float: right;">\r\n        <span style="display: flex">\r\n          <mat-progress-bar\r\n            [ngClass]="{\'green\': miner.progress === 100, \'purple\': miner.progress !== 100}"\r\n            style="width: 70px; height: 10px; border-radius: 8px; margin-top: 3px"\r\n            color="primary"\r\n            mode="determinate"\r\n            [value]="miner.progress">\r\n        </mat-progress-bar>\r\n        &nbsp;{{getCapacityString(miner.capacity)}}\r\n        </span>\r\n      </span>\r\n      <div style="clear: both;"></div>\r\n    </div>\r\n    <hr>\r\n    <div>\r\n      <span style="float: left;">Total</span>\r\n      <span style="float: right;">{{getCapacityString(totalCapacity)}}</span>\r\n      <div style="clear: both;"></div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n'},lsP6:function(t,n){t.exports='<mat-toolbar color="primary" style="margin-bottom: 10px; background-color: #333">\r\n  <mat-toolbar-row>\r\n    <span style="margin-right: 14px"><img src="favicon.png" height="28" style="position: relative; top: 7px; margin-top: -7px"> BHD-Burst-Proxy</span>\r\n    <span *ngFor="let proxy of getStats()">\r\n      <span>|</span>\r\n      <button mat-button (click)="setCurrentProxy(proxy)" [ngClass]="{\'mat-accent\': getCurrentProxy() === proxy}">{{proxy.name}}</button>\r\n    </span>\r\n    <span style="flex: 1 1 auto;"></span>\r\n    <a mat-icon-button href="https://github.com/felixbrucker/bhd-burst-proxy#donate" target="_blank">\r\n      <mat-icon aria-label="Github" style="color: #b700b4">favorite</mat-icon>\r\n    </a>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<div *ngIf="!getCurrentProxy()">\r\n  <mat-spinner [diameter]="40" style="margin:0 auto;"></mat-spinner>\r\n</div>\r\n<div class="flex-container" *ngIf="getCurrentProxy()">\r\n  <app-proxy [proxy]="getCurrentProxy()"></app-proxy>\r\n</div>\r\n'},"nH/3":function(t,n){t.exports='<router-outlet></router-outlet>\r\n<div style="clear: both;"></div>\r\n<div style="text-align: center; font-size: 0.7em; margin-top: 8px">\r\n  Made with <mat-icon aria-label="Github" style="color: #b700b4;font-size: 0.9em; margin-left: -6px; margin-right: -6px;">favorite</mat-icon> by felixbrucker\r\n</div>\r\n'},oIdt:function(t,n){t.exports='<mat-card style="width: 320px" class="custom-card">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      <span>Rounds</span>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content style="font-size: 1em">\r\n    <span style="float: left;">Submitted</span>\r\n    <span style="float: right;"><span style="font-size: 0.8em">{{getSubmitPercent()}}%</span> {{roundsSubmitted}}/{{totalRounds}}</span>\r\n    <div style="clear: both;"></div>\r\n    <span style="float: left;">Won</span>\r\n    <span style="float: right;">{{roundsWon}}</span>\r\n    <div style="clear: both;"></div>\r\n    <canvas #roundsSubmittedChart>{{roundsSubmittedChart}}</canvas>\r\n  </mat-card-content>\r\n</mat-card>\r\n'},oL40:function(t,n){t.exports='<mat-card style="width: 320px" class="custom-card">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      <span>Current Block: {{currentBlock}}</span>\r\n    </mat-card-title>\r\n    <mat-card-subtitle style="color: #dcddde">\r\n      <span>Start time: {{getStartTime()}} | Elapsed: {{getElapsedSinceStart()}}</span>\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content style="font-size: 1em">\r\n    <span style="float: left;">Best deadline</span>\r\n    <span style="float: right;">{{getBestDLString()}}</span>\r\n    <div style="clear: both;"></div>\r\n    <span style="float: left;">Difficulty</span>\r\n    <span style="float: right;">{{netDiff.toFixed(0)}}</span>\r\n    <div style="clear: both;"></div>\r\n  </mat-card-content>\r\n</mat-card>\r\n'},qbtR:function(t,n){t.exports='<div class="flex-container-row">\r\n  <div style="margin: 10px;">\r\n    <app-proxy-info\r\n      [name]="proxy.name"\r\n      [maxScanTime]="proxy.maxScanTime"\r\n      [miners]="proxy.miner"\r\n      [totalCapacity]="proxy.totalCapacity"\r\n      [currentBlockHeights]="getCurrentBlockHeights()">\r\n    </app-proxy-info>\r\n  </div>\r\n  <div class="flex-container-col">\r\n    <app-upstream *ngFor="let upstream of proxy.upstreamStats"\r\n                  [upstream]="upstream"\r\n                  [miners]="proxy.miner"\r\n                  [maxScanTime]="proxy.maxScanTime"\r\n                  style="margin: 8px">\r\n    </app-upstream>\r\n  </div>\r\n</div>\r\n'},wUVE:function(t,n){t.exports=".purple ::ng-deep .mat-progress-bar-fill::after {\n  background-color: #7c00c4; }\n\n.green ::ng-deep .mat-progress-bar-fill::after {\n  background-color: rgba(33, 224, 132, 0.5); }\n\n.ellipsis {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -o-text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 170px; }\n\n.ellipsis:hover {\n  overflow: visible;\n  max-width: none;\n  width: auto; }\n"},ynWL:function(t,n){t.exports=""},zUnb:function(t,n,r){"use strict";r.r(n);r("yLV6");var e=r("CcnG"),s=r("ToYH"),a=r("mrSG"),o=r("ZYjt"),i=r("ZYCi"),p=r("gFX4"),c=function(){function t(){this.socket=p()}return t.prototype.subscribe=function(t,n){this.socket.on(t,n)},t.prototype.publish=function(t){for(var n,r=[],e=1;e<arguments.length;e++)r[e-1]=arguments[e];(n=this.socket).emit.apply(n,[t].concat(r))},t=a.b([Object(e.B)({providedIn:"root"}),a.d("design:paramtypes",[])],t)}(),d=r("26FU"),u=function(){function t(t){this.websocketService=t,this.stats=new d.a([]),this.statsObservable=this.stats.asObservable(),this.websocketService.subscribe("stats/init",this.onNewStats.bind(this)),this.websocketService.subscribe("stats/proxy",this.onNewProxyStats.bind(this)),this.websocketService.subscribe("stats/current-round",this.onNewUpstreamStats.bind(this)),this.websocketService.subscribe("stats/historical",this.onNewUpstreamStats.bind(this))}return t.prototype.init=function(){this.websocketService.publish("stats/get")},t.prototype.onNewStats=function(t){this.stats.next(t)},t.prototype.onNewProxyStats=function(t,n){var r=this.stats.getValue();if(r){var e=r.find(function(n){return n.name===t});e&&Object.keys(n).forEach(function(t){e[t]=n[t]})}},t.prototype.onNewUpstreamStats=function(t,n){var r=this.stats.getValue();if(r){var e=r.map(function(t){return t.upstreamStats}).reduce(function(t,n){return t.concat(n)},[]).find(function(n){return n.fullName===t});e&&Object.keys(n).forEach(function(t){e[t]=n[t]})}},t.prototype.getStatsObservable=function(){return this.statsObservable},t=a.b([Object(e.B)({providedIn:"root"}),a.d("design:paramtypes",[c])],t)}(),l=function(){function t(t){this.statsService=t,this.stats=[]}return t.prototype.ngOnInit=function(){var t=this;this.statsService.getStatsObservable().subscribe(function(n){0===t.stats.length&&0!==n.length&&t.setCurrentProxy(n[0]),t.stats=n}),this.statsService.init()},t.prototype.getStats=function(){return this.stats},t.prototype.getCurrentProxy=function(){return this.currentProxy},t.prototype.setCurrentProxy=function(t){this.currentProxy=t},t=a.b([Object(e.n)({selector:"app-main",template:r("lsP6"),styles:[r("P0fl")]}),a.d("design:paramtypes",[u])],t)}(),m=[{path:"",component:l,pathMatch:"full"},{path:"**",redirectTo:""}],f=function(){function t(){}return t=a.b([Object(e.J)({imports:[i.a.forRoot(m)],exports:[i.a]})],t)}(),b=function(){function t(){this.title="my-app"}return t=a.b([Object(e.n)({selector:"app-root",template:r("nH/3"),styles:[r("ynWL")]})],t)}(),g=r("wFw1"),y=r("FVSy"),h=r("UodH"),j=r("SMsm"),v=r("Z+uX"),S=r("8mMr"),x=r("La40"),k=r("Blfk"),O=r("WyAD"),w=function(){function t(){this.netDiffChart={}}return t.prototype.ngOnInit=function(){this.netDiffChart=new O.Chart(this.netDiffChartRef.nativeElement,{type:"line",data:{labels:this.historicalRounds.map(function(t){return t.blockHeight}),datasets:[{data:this.historicalRounds.map(function(t){return t.netDiff}),pointRadius:0,backgroundColor:["rgba(33, 224, 132, 0.5)"],borderColor:["rgb(51, 51, 51, 1)"]}]},options:{legend:{display:!1},scales:{xAxes:[{display:!0,ticks:{fontColor:"#dcddde"}}],yAxes:[{display:!0,ticks:{fontColor:"#dcddde"}}]}}})},t.prototype.ngOnChanges=function(t){0!==Object.keys(this.netDiffChart).length&&(this.netDiffChart.data.labels=t.historicalRounds.currentValue.map(function(t){return t.blockHeight}),this.netDiffChart.data.datasets[0].data=t.historicalRounds.currentValue.map(function(t){return t.netDiff}),this.netDiffChart.update())},a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"historicalRounds",void 0),a.b([Object(e.lb)("netDiffChart"),a.d("design:type",Object)],t.prototype,"netDiffChartRef",void 0),t=a.b([Object(e.n)({selector:"app-net-diff-chart",template:r("c8w9"),styles:[r("Uq7F")]}),a.d("design:paramtypes",[])],t)}(),D=r("wd/R"),C=r("rV5w"),E=function(){function t(){this.elapsedSinceStart="00:00:00"}return t.prototype.ngOnInit=function(){var t=this;this.counter=C.a.interval(1e3).map(function(){return D.duration(D().diff(D(t.roundStart)))}),this.subscription=this.counter.subscribe(function(n){return t.elapsedSinceStart=n.hours().toString().padStart(2,"0")+":"+n.minutes().toString().padStart(2,"0")+":"+n.seconds().toString().padStart(2,"0")})},t.prototype.getStartTime=function(){return D(this.roundStart).format("HH:mm:ss")},t.prototype.getBestDLString=function(){if(!this.bestDL)return"N/A";var t=D.duration(parseInt(this.bestDL,10),"seconds");return t.months()>0?t.months()+"m "+t.days()+"d "+t.hours().toString().padStart(2,"0")+":"+t.minutes().toString().padStart(2,"0")+":"+t.seconds().toString().padStart(2,"0"):t.days()>0?t.days()+"d "+t.hours().toString().padStart(2,"0")+":"+t.minutes().toString().padStart(2,"0")+":"+t.seconds().toString().padStart(2,"0"):t.hours().toString().padStart(2,"0")+":"+t.minutes().toString().padStart(2,"0")+":"+t.seconds().toString().padStart(2,"0")},t.prototype.getElapsedSinceStart=function(){return this.elapsedSinceStart},a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"currentBlock",void 0),a.b([Object(e.E)(),a.d("design:type",String)],t.prototype,"roundStart",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"netDiff",void 0),a.b([Object(e.E)(),a.d("design:type",String)],t.prototype,"bestDL",void 0),t=a.b([Object(e.n)({selector:"app-current-round-info",template:r("oL40"),styles:[r("b5tn")]}),a.d("design:paramtypes",[])],t)}(),P=r("V9q+"),R=function(){function t(){this.roundsSubmittedChart=[]}return t.prototype.ngOnInit=function(){this.roundsSubmittedChart=new O.Chart(this.roundsSubmittedChartRef.nativeElement,{type:"pie",data:{labels:["Rounds Won","Rounds Submitted","Rounds with DLs","Rounds without DLs"],datasets:[{data:[this.roundsWon,this.roundsSubmitted-this.roundsWon,this.roundsWithDLs-this.roundsSubmitted,this.totalRounds-this.roundsWithDLs],pointRadius:0,backgroundColor:["rgba(21, 242, 40, 0.5)","rgba(114, 14, 237, 0.5)","rgba(61, 120, 204, 0.5)"],borderColor:["rgb(51, 51, 51, 1)","rgb(51, 51, 51, 1)","rgb(51, 51, 51, 1)","rgb(51, 51, 51, 1)"]}]},options:{legend:{display:!1}}})},t.prototype.getSubmitPercent=function(){return 0===this.totalRounds?0:(this.roundsSubmitted/this.totalRounds*100).toFixed(2)},a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"totalRounds",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"roundsWithDLs",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"roundsSubmitted",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"roundsWon",void 0),a.b([Object(e.lb)("roundsSubmittedChart"),a.d("design:type",Object)],t.prototype,"roundsSubmittedChartRef",void 0),t=a.b([Object(e.n)({selector:"app-round-stats",template:r("oIdt"),styles:[r("A/Yy")]}),a.d("design:paramtypes",[])],t)}(),L=function(){function t(){}return t.prototype.ngOnInit=function(){},t.prototype.getCurrentBlockHeights=function(){return this.proxy.upstreamStats.map(function(t){return t.blockNumber})},a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"proxy",void 0),t=a.b([Object(e.n)({selector:"app-proxy",template:r("qbtR"),styles:[r("A+cK")]}),a.d("design:paramtypes",[])],t)}(),z=function(){function t(){}return t.prototype.ngOnInit=function(){},a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"upstream",void 0),a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"miners",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"maxScanTime",void 0),t=a.b([Object(e.n)({selector:"app-upstream",template:r("AusG"),styles:[r("Kgkr")]}),a.d("design:paramtypes",[])],t)}(),B=r("8kg+"),I=r("6blF"),M=function(){function t(){this.elapsedSinceStart="00:00:00",this.scanProgress=100}var n;return n=t,t.prototype.ngOnInit=function(){var t=this;this.counter=I.a.interval(1e3).map(function(){return D.duration(D().diff(t.roundStart))}),this.subscription=this.counter.subscribe(function(n){t.elapsedSinceStart=n.hours().toString().padStart(2,"0")+":"+n.minutes().toString().padStart(2,"0")+":"+n.seconds().toString().padStart(2,"0"),t.scanProgress=t.getScanProgress()})},t.prototype.getStartTime=function(){return D(this.roundStart).format("HH:mm:ss")},t.prototype.getBestDLString=function(){if(!this.bestDL)return"N/A";var t=D.duration(parseInt(this.bestDL,10),"seconds");return t.months()>0?t.months()+"m "+t.days()+"d "+t.hours().toString().padStart(2,"0")+":"+t.minutes().toString().padStart(2,"0")+":"+t.seconds().toString().padStart(2,"0"):t.days()>0?t.days()+"d "+t.hours().toString().padStart(2,"0")+":"+t.minutes().toString().padStart(2,"0")+":"+t.seconds().toString().padStart(2,"0"):t.hours().toString().padStart(2,"0")+":"+t.minutes().toString().padStart(2,"0")+":"+t.seconds().toString().padStart(2,"0")},t.prototype.getElapsedSinceStart=function(){return this.elapsedSinceStart},t.getDLString=function(t){if(null===t)return"N/A";var n=D.duration(parseInt(t,10),"seconds");return n.months()>0?n.months()+"m "+n.days()+"d "+n.hours().toString().padStart(2,"0")+":"+n.minutes().toString().padStart(2,"0")+":"+n.seconds().toString().padStart(2,"0"):n.days()>0?n.days()+"d "+n.hours().toString().padStart(2,"0")+":"+n.minutes().toString().padStart(2,"0")+":"+n.seconds().toString().padStart(2,"0"):n.hours().toString().padStart(2,"0")+":"+n.minutes().toString().padStart(2,"0")+":"+n.seconds().toString().padStart(2,"0")},t.prototype.getEstimatedCapacity=function(){return B(this.estimatedCapacityInTB*Math.pow(1024,4))},t.prototype.getBestDL=function(){var t=this.historicalRounds.map(function(t){return t.bestDL}).filter(function(t){return null!==t}).map(function(t){return parseInt(t,10)}).reduce(function(t,n){return null===t?n:t<n?t:n},null);return n.getDLString(t)},t.prototype.getAvgDL=function(){var t=this.historicalRounds.map(function(t){return t.bestDL}).filter(function(t){return null!==t}).map(function(t){return parseInt(t,10)});if(0===t.length)return n.getDLString(null);var r=t.reduce(function(t,n){return t+n},0)/t.length;return n.getDLString(r)},t.prototype.getScanProgress=function(){var t=this,n=Object.keys(this.miners).map(function(n){return t.miners[n]}).filter(function(n){return n.currentHeightScanning===t.currentBlock}),r=n.reduce(function(t,n){return t+(n.capacity||0)},0),e=D().diff(this.roundStart,"seconds");if(0===n.length&&e>=this.maxScanTime)return 100;if(0===n.length&&e<this.maxScanTime)return 0;var s=n.map(function(e){var s=t.getProgressForMiner(e);return e.capacity?e.capacity/r*s:s/n.length}).reduce(function(t,n){return t+n},0);return Math.min(Math.round(s),100)},t.prototype.getProgressForMiner=function(t){var n=t.maxScanTime||this.maxScanTime;if(!t.startedAt)return 100;var r=D().diff(t.startedAt,"seconds");return 100*Math.min(1,r/n)},a.b([Object(e.E)(),a.d("design:type",String)],t.prototype,"name",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"estimatedCapacityInTB",void 0),a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"historicalRounds",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"currentBlock",void 0),a.b([Object(e.E)(),a.d("design:type",String)],t.prototype,"roundStart",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"netDiff",void 0),a.b([Object(e.E)(),a.d("design:type",String)],t.prototype,"bestDL",void 0),a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"miners",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"maxScanTime",void 0),t=n=a.b([Object(e.n)({selector:"app-upstream-info",template:r("HalP"),styles:[r("wUVE")]}),a.d("design:paramtypes",[])],t)}(),T=function(){function t(){this.scanProgress=100}return t.prototype.ngOnInit=function(){var t=this;this.counter=I.a.interval(1e3),this.subscription=this.counter.subscribe(function(){return t.scanProgress=t.getScanProgress()})},t.prototype.getMiner=function(){var t=this;return Object.keys(this.miners).sort().map(function(n){var r=t.miners[n];return r.id=n,r.progress=t.getProgressForMiner(r),r})},t.prototype.getCapacityString=function(t){return B(t)},t.prototype.getScanProgress=function(){var t=this,n=Object.keys(this.miners).map(function(n){return t.miners[n]});if(0===n.length)return 100;var r=n.map(function(r){var e=t.getProgressForMiner(r);return r.capacity?r.capacity/t.totalCapacity*e:e/n.length}).reduce(function(t,n){return t+n},0);return Math.min(Math.round(r),100)},t.prototype.getProgressForMiner=function(t){var n=t.maxScanTime||this.maxScanTime;if(!t.startedAt)return 100;var r=D().diff(t.startedAt,"seconds");return 100*Math.min(1,r/n)},t.prototype.getState=function(t){var n=D().diff(t.lastTimeActive,"minutes"),r=t.lastBlockActive,e=this.currentBlockHeights.every(function(t){return Math.abs(r-t)>7});if(n>=5&&e)return 0;var s=this.currentBlockHeights.some(function(t){var n=Math.abs(r-t);return n>=2&&n<7});return n>=5&&s?1:2},a.b([Object(e.E)(),a.d("design:type",String)],t.prototype,"name",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"maxScanTime",void 0),a.b([Object(e.E)(),a.d("design:type",Number)],t.prototype,"totalCapacity",void 0),a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"miners",void 0),a.b([Object(e.E)(),a.d("design:type",Object)],t.prototype,"currentBlockHeights",void 0),t=a.b([Object(e.n)({selector:"app-proxy-info",template:r("k0Ug"),styles:[r("+pfL")]}),a.d("design:paramtypes",[])],t)}(),N=function(){function t(){}return t=a.b([Object(e.J)({declarations:[b,l,w,E,R,L,z,M,T],imports:[o.a,f,g.b,y.a,h.a,j.a,v.a,S.a,x.a,k.a,P.a],providers:[],bootstrap:[b]})],t)}();Object(s.a)().bootstrapModule(N).catch(function(t){return console.error(t)})}},[[0,0,4]]]);